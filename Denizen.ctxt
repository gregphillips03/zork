#BlueJ class context
comment0.params=name\ desc\ health\ mobile
comment0.target=Denizen(java.lang.String,\ java.lang.String,\ int,\ boolean)
comment0.text=\r\n\ Denizen\ Constructor\r\n\ Constructor\ for\ Denizen\ objects\r\n\ \r\n\ @param\ name\ \ name\ of\ NPC\r\n\ @param\ desc\ \ description\ of\ NPC\r\n\ @param\ health\ \ \ \ hit\ points\ of\ NPC\r\n\ @param\ mobile\ \ \ \ whether\ or\ not\ the\ NPC\ can\ move\r\n
comment1.params=s\ d\ initState
comment1.target=Denizen(java.util.Scanner,\ Dungeon,\ boolean)
comment1.text=\r\n\ Denizen\ Constructor\r\n\ Constructor\ for\ Denizen\ object\r\n\ \r\n\ @param\ s\ scanner\ object\ for\ hydration\r\n\ @param\ d\ dungeon\ object\ for\ hydration\r\n\ @param\ b\ initialization\ parameter\ /\ tells\ constructor\ whether\ or\ not\ to\ set\ NPC\ current\ room\ and\ add\ object\ /\ avoid\ duplicaton\ of\ objects\ in\ dungeon\r\n
comment10.params=
comment10.target=Room\ getNpcRoom()
comment10.text=\r\n\ getNpcRoom\r\n\ Getter\ method\ for\ NPC\ currentRoom\r\n\ \r\n\ @return\ returns\ the\ room\ the\ NPC\ is\ currentlylocated\r\n
comment11.params=
comment11.target=void\ moveDenizens()
comment11.text=\r\n\ moveDenizens\r\n\ Moves\ denizens\ through\ dungeon\ rooms\ /\ method\ call\ triggered\ by\ successful\ MoveCommand\ object\r\n
comment12.params=min\ max
comment12.target=int\ randInt(int,\ int)
comment12.text=\r\n\ randInt\r\n\ Random\ number\ generator\ /\ used\ to\ randomly\ pick\ an\ exit\ for\ the\ NPC\ to\ walk\ through\r\n\ \r\n\ @param\ min\ bottom\ limit\ for\ random\ number\ /\ currently\ only\ 0\ to\ match\ bottom\ of\ Array\ index\r\n\ @param\ max\ upper\ limit\ fo\ random\ number\ /\ maxes\ out\ at\ the\ size\ of\ the\ ArrayList\ of\ exits,\ -1\ for\ 0-based\r\n
comment13.params=room\ npc
comment13.target=boolean\ tryFollowUser(Room,\ Denizen)
comment13.text=\r\n\ tryFollowUser\r\n\ This\ is\ called\ if\ the\ NPC\ is\ currently\ pissed\ off.\ It\ attempts\ to\ follow\ the\ user\ if\ it\ is\ located\ in\ an\ adjacent\ room\ to\ the\ user's\ current\ room\r\n\ \r\n\ @\ param\ room\ \ \ \ \ the\ room\ the\ NPC\ is\ currently\ sitting\ in\r\n\ @\ param\ npc\ \ \ \ \ \ the\ current\ denizen\ object\ to\ work\ on\r\n\ @\ return\ true\ \ \ \ successful\ identification\ of\ user\ in\ adjacent\ or\ same\ room\ as\ NPC\r\n\ @\ return\ false\ \ \ unsuccesful\ identificaiton\ of\ user\ in\ adjacent\ or\ same\ room\ as\ NPC\r\n
comment14.params=room\ i\ npc
comment14.target=void\ goToAdjacentRoom(Room,\ int,\ Denizen)
comment14.text=\r\n\ goToAdjacentRoom\r\n\ This\ moves\ the\ NPC\ to\ a\ random\ room\r\n\ \r\n\ @\ param\ room\ \ \ \ \ the\ room\ the\ NPC\ is\ currently\ sitting\ in\r\n\ @\ param\ i\ \ \ \ \ \ \ \ random\ number\ to\ index\ in\ room's\ array\ of\ exits\r\n\ @\ param\ npc\ \ \ \ \ \ the\ current\ denizen\ object\ to\ work\ on\r\n
comment15.params=pw
comment15.target=void\ storeState(java.io.PrintWriter)
comment15.text=\r\n\ storeState\r\n\ Persistence\ method\ to\ store\ NPC\ states\ in\ save\ file\r\n\ \r\n\ @param\ pw\ PrintWriter\ object\ handed\ focus\ from\ GameState\ Class\r\n
comment16.params=s\ den
comment16.target=void\ restoreState(java.util.Scanner,\ Denizen)
comment16.text=\r\n\ restoreState\r\n\ Hydration\ method\ to\ upload\ NPC\ states\ from\ save\ file\r\n\ \r\n\ @param\ s\ Scanner\ object\ handed\ focus\ from\ GameState\ Class\r\n\ @param\ den\ Denizen\ object\ to\ work\ on\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ getName\r\n\ Getter\ method\ for\ NPC\ name\r\n\ \r\n\ @return\ returns\ name\ of\ NPC\ as\ string\r\n
comment3.params=
comment3.target=java.lang.String\ getDesc()
comment3.text=\r\n\ getDesc\r\n\ Getter\ method\ for\ NPC\ description\r\n\ \r\n\ @return\ returns\ description\ of\ NPC\ as\ string\r\n
comment4.params=
comment4.target=int\ getHealth()
comment4.text=\r\n\ getHealth\r\n\ Getter\ method\ for\ NPC\ hit\ points\r\n\ \r\n\ @return\ returns\ current\ hit\ points\ of\ NPC\ as\ integer\r\n
comment5.params=
comment5.target=boolean\ getMobility()
comment5.text=\r\n\ getMobility\r\n\ Getter\ method\ for\ NPC\ mobility\r\n\ \r\n\ @return\ returns\ NPC\ object's\ mobility\ as\ boolean\r\n
comment6.params=
comment6.target=boolean\ getMood()
comment6.text=\r\n\ getMood\r\n\ Getter\ method\ for\ NPC\ mood\r\n\ \r\n\ @return\ returns\ NPC\ object's\ mood\ as\ boolean\r\n
comment7.params=h
comment7.target=void\ setHealth(int)
comment7.text=\r\n\ setHealth\r\n\ Setter\ method\ for\ NPC\ hit\ points\r\n\ \r\n\ @param\ h\ hitpoints\ of\ NPC\ object\ as\ integer\r\n
comment8.params=rm
comment8.target=void\ setRoom(Room)
comment8.text=\r\n\ setRoom\r\n\ Setter\ method\ for\ NPC\ current\ room\r\n\ \r\n\ @param\ rm\ room\ to\ set\ the\ NPC\ in\ as\ Room\ object\r\n
comment9.params=item
comment9.target=void\ add(Item)
comment9.text=\r\n\ add\r\n\ Adds\ item\ to\ NPC\ inventory\r\n\ \r\n\ @param\ item\ Item\ object\ to\ add\ to\ NPC\ carriedItems\ ArrayList\r\n
numComments=17
