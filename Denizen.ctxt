#BlueJ class context
comment0.params=name\ desc\ health\ mobile
comment0.target=Denizen(java.lang.String,\ java.lang.String,\ int,\ boolean)
comment0.text=\n\ Constructor\ for\ Denizen\ objects\n\ \n\ @param\ name\ \ \ \ \ \ Name\ of\ NPC.\n\ @param\ desc\ \ \ \ \ \ Description\ of\ NPC.\n\ @param\ health\ \ \ \ Hit\ points\ of\ NPC.\n\ @param\ mobile\ \ \ \ Whether\ or\ not\ the\ NPC\ can\ move.\n
comment1.params=s\ d\ initState
comment1.target=Denizen(java.util.Scanner,\ Dungeon,\ boolean)
comment1.text=\n\ Constructor\ for\ Denizen\ objects\n\ \n\ @param\ s\ \ \ \ \ \ \ \ \ \ \ \ \ Scanner\ object\ for\ hydration.\n\ @param\ d\ \ \ \ \ \ \ \ \ \ \ \ \ Dungeon\ object\ for\ hydration.\n\ @param\ initState\ \ \ \ \ Initialization\ parameter.\ Tells\ constructor\ whether\ or\ not\ to\ set\ NPC\ current\ room\ and\ add\ object\ or\ avoid\ duplicaton\ of\ objects\ in\ dungeon.\n
comment10.params=
comment10.target=Room\ getNpcRoom()
comment10.text=\n\ Getter\ method\ for\ NPC\ currentRoom\n\ \n\ @return\ \ \ \ \ \ The\ room\ the\ NPC\ is\ currently\ located.\n
comment11.params=
comment11.target=void\ moveDenizens()
comment11.text=\n\ Moves\ denizens\ through\ dungeon\ rooms\ /\ method\ call\ triggered\ by\ successful\ MoveCommand\ object\n
comment12.params=min\ max
comment12.target=int\ randInt(int,\ int)
comment12.text=\n\ Random\ number\ generator\ /\ used\ to\ randomly\ pick\ an\ exit\ for\ the\ NPC\ to\ walk\ through\n\ \n\ @param\ min\ \ \ Bottom\ limit\ for\ random\ number\ /\ currently\ only\ 0\ to\ match\ bottom\ of\ Array\ index.\n\ @param\ max\ \ \ Upper\ limit\ fo\ random\ number\ /\ maxes\ out\ at\ the\ size\ of\ the\ ArrayList\ of\ exits,\ -1\ for\ 0-based.\n\ @return\ \ \ \ \ \ randomly\ generated\ integer\ within\ a\ range\ defined\ by\ the\ number\ of\ available\ exits\n
comment13.params=room\ npc
comment13.target=boolean\ tryFollowUser(Room,\ Denizen)
comment13.text=\n\ This\ is\ called\ if\ the\ NPC\ is\ currently\ pissed\ off.\ It\ attempts\ to\ follow\ the\ user\ if\ it\ is\ located\ in\ an\ adjacent\ room\ to\ the\ user's\ current\ room\n\ \n\ @param\ room\ \ \ \ \ The\ room\ the\ NPC\ is\ currently\ sitting\ in\n\ @param\ npc\ \ \ \ \ \ The\ current\ denizen\ object\ to\ work\ on\n\ @return\ \ \ \ \ \ \ \ \ Boolean\ value\ based\ on\ failure\ or\ success\ where\ user\ is\ or\ isn't\ located\ in\ an\ adjacent\ or\ same\ room\ as\ the\ NPC.\n
comment14.params=room\ i\ npc
comment14.target=void\ goToAdjacentRoom(Room,\ int,\ Denizen)
comment14.text=\n\ This\ moves\ the\ NPC\ to\ a\ random\ room\n\ \n\ @param\ room\ \ \ \ \ The\ room\ the\ NPC\ is\ currently\ sitting\ in.\n\ @param\ i\ \ \ \ \ \ \ \ Random\ number\ to\ index\ in\ room's\ array\ of\ exits.\n\ @param\ npc\ \ \ \ \ \ The\ current\ denizen\ object\ to\ work\ on.\n
comment15.params=pw
comment15.target=void\ storeState(java.io.PrintWriter)
comment15.text=\n\ Persistence\ method\ to\ store\ NPC\ states\ in\ save\ file\n\ \n\ @param\ pw\ PrintWriter\ object\ handed\ focus\ from\ GameState\ Class.\n
comment16.params=s\ den
comment16.target=void\ restoreState(java.util.Scanner,\ Denizen)
comment16.text=\n\ Hydration\ method\ to\ upload\ NPC\ states\ from\ save\ file.\n\ \n\ @param\ s\ \ \ \ \ \ \ \ \ Scanner\ object\ handed\ focus\ from\ GameState\ Class.\n\ @param\ den\ \ \ \ \ \ \ Denizen\ object\ to\ work\ on.\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\n\ Getter\ method\ for\ NPC\ name\n\ \n\ @return\ \ \ \ \ \ \ Name\ of\ NPC\ as\ string.\n
comment3.params=
comment3.target=java.lang.String\ getDesc()
comment3.text=\n\ Getter\ method\ for\ NPC\ description\n\ \ \n\ @return\ \ \ \ \ \ Description\ of\ NPC\ as\ string.\n
comment4.params=
comment4.target=int\ getHealth()
comment4.text=\n\ Getter\ method\ for\ NPC\ hit\ points\n\ \n\ @return\ \ \ \ \ \ Current\ hit\ points\ of\ NPC\ as\ integer.\n
comment5.params=
comment5.target=boolean\ getMobility()
comment5.text=\n\ Getter\ method\ for\ NPC\ mobility\n\ \n\ @return\ \ \ \ \ \ NPC\ object's\ mobility\ as\ boolean.\n
comment6.params=
comment6.target=boolean\ getMood()
comment6.text=\n\ Getter\ method\ for\ NPC\ mood\n\ \n\ @return\ \ \ \ \ \ NPC\ object's\ mood\ as\ boolean.\ \n
comment7.params=h
comment7.target=void\ setHealth(int)
comment7.text=\n\ Setter\ method\ for\ NPC\ hit\ points\n\ \n\ @param\ h\ \ Hitpoints\ of\ NPC\ object\ as\ integer.\n
comment8.params=rm
comment8.target=void\ setRoom(Room)
comment8.text=\n\ Setter\ method\ for\ NPC\ current\ room\n\ \n\ @param\ rm\ \ \ \ Room\ to\ set\ the\ NPC\ in\ as\ Room\ object.\n
comment9.params=item
comment9.target=void\ add(Item)
comment9.text=\n\ Adds\ item\ to\ NPC\ inventory\n\ \n\ @param\ item\ Item\ object\ to\ add\ to\ NPC\ carriedItems\ ArrayList.\ \n
numComments=17
