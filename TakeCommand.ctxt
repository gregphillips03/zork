#BlueJ class context
comment0.params=itemName
comment0.target=TakeCommand(java.lang.String)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ Class\ TakeCommand\r\n\ \r\n\ @param\ itemName\ \ \ \ \ \ Name\ of\ item\ as\ String\r\n
comment1.params=
comment1.target=java.lang.String\ execute()
comment1.text=\r\n\ execute\r\n\ Takes\ String\ input\ and\ splits\ it.\ If\ String\ array\ is\ >1,\ it\ calls\ Cogitate.\ If\ not,\ it\ asks\ for\ more\ input\ before\ calling\ cogitate\r\n\ \r\n\ @throw\ InterruptedException\ \ \ \ \ \ Pushes\ thread\ sleep\ disruptions\ up\ the\ stack\ \r\n\ @throw\ FileNotFoundException\ \ \ \ \ Pushes\ IO\ exception\ up\ the\ stack\ where\ not\ explicitly\ handled\r\n\ \r\n\ @return\ cogitate(parts)\ \ Returns\ String\ message\ from\ cogitate\ method\r\n\ @return\ cogitate(pieces)\ Returns\ String\ message\ from\ cogitate\ method\r\n\ @return\ ""\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Returns\ empty\r\n
comment2.params=sa
comment2.target=java.lang.String\ cogitate(java.lang.String[])
comment2.text=\r\n\ cogitate\r\n\ Determines\ if\ the\ user\ can\ take\ an\ item\ based\ on\ whether\ it's\ in\ the\ room,\ how\ heavy\ it\ is,\ and\ whether\ or\ not\ they\ already\ have\ it.\ \r\n\ \r\n\ @param\ sa\ \ \ \ String\ Array\ of\ input\ split\ by\ execute\ method\r\n\ @return\ \ \ \ \ \ String\ message\ after\ successful\ addition\ of\ item\ to\ inventory\r\n\ @return\ \ \ \ \ \ String\ message\ that\ item\ is\ too\ heavy\ to\ take,\ but\ user\ can\ still\ interact\ with\ it\r\n\ @return\ \ \ \ \ \ String\ message\ indicating\ user\ has\ the\ item\ in\ inventory\r\n\ @return\ \ \ \ \ \ String\ message\ indicating\ the\ item\ is\ not\ in\ the\ room\r\n
numComments=3
